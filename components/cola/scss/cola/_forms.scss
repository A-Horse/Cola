
@mixin form-control-focus($color: $input-border-focus) {
    $color-rgba: rgba(red($color), green($color), blue($color), .6);
    &:focus {
        border-color: $color;
        outline: 0;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px $color-rgba;
    }
}

@mixin underline-form-control-focus($color: $input-border-focus) {
    &:focus:not([readonly]) {
        border-bottom: 1px solid $LightGreen600;
        box-shadow: 0 1px 0 0 $LightGreen600;
    }
}

.form-control {
    display: block;
    width: 100%;
    height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
    padding: $padding-base-vertical $padding-base-horizontal;
    font-size: $font-size-base;
    line-height: $line-height-base;
    color: $input-color;
    background-color: $input-bg;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid $input-border;
    border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    vertical-align: middle;

    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
    @include form-control-focus;
    @include transition(border-color ease-in-out .15s, box-shadow ease-in-out .15s);
    @include placeholder;
    @include box-sizing;
    // Placeholder
    //@include placeholder;

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        background-color: $input-bg-disabled;
        opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
    }

    &[disabled],
    fieldset[disabled] & {
        cursor: $cursor-disabled;
    }
}

//addon icon
.input-group {
  display: inline-table;
  vertical-align: middle;

    & > *:first-child {
        @include left-radius;

        &.input-group-addon {
            border-right: 0;
        }
    }

    & > *:last-child {
        @include right-radius;

        &.form-control {
            @include right-radius;
        }

        &.input-group-addon {
            border-left: 0;
        }
    }



    .input-group-addon {
        @include box-sizing;
        margin: 0;
        display: table-cell;
        color: #555;
        line-height: 1;
        font-size: rem-calc(14);
        padding: rem-calc(6) rem-calc(12);
        text-align: center;
        background-color: #eee;
        border: 1px solid #ccc;

        & + input {
            display: table-cell;
            max-width: 100%;
            width: auto;
            margin: 0;
            border-radius: 0;
        }
    }
}

.form-control.underline {
    border: none;
    border-bottom: 1px solid #bbb;
    border-radius: 0;
    outline: none;
    margin: 0 0 0 0;

    box-shadow: none;
    background-color: rgba(0, 0, 0, 0);
    @include underline-form-control-focus;
}

// Styling for input field wrapper

.form-group {
    margin-bottom: $form-group-margin-bottom;
    @include box-sizing;
    label {
        display: inline-block;
        max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
        margin-bottom: 5px;
        font-weight: bold;
        color: $Dark-Purple;
    }

}

form.form-inline {
    display: inline-block;
    & > * {
        display: inline-block;
        max-width: 100%;
        width: auto;
        & > * {
            display: inline-block;
            max-width: 100%;
            width: auto;
        }
    }
}

.form-group.form-inline {
    position: relative;
    overflow: hidden;
    & > * {
        max-width: 100%;
        width: auto;
    }
    input {
        float: right;
    }
    label {
        position: absolute;
        top: 50%;
        transform: translate(0, -50%);
    }
    &.has-feedback .form-feedback-icon {
        top: auto;
    }
}

form.gapless-form {
    @include box-sizing;
    input[type] {
        @include radius(0);
        text-align: center;
        &:first-child {
            @include top-radius;
        }
        &:last-child {
            @include bottom-radius;
        }
    }
}


@mixin form-feedback-padding($padding: 2.1em) {
    padding-right: $padding;
}

.form-group.has-feedback {
    position: relative;
    .form-feedback-icon {
        position: absolute;
        right: 0;
        z-index: 2;
        display: block;
        top: rem-calc(23);
        width: rem-calc(34);
        height: rem-calc(34);
        line-height: rem-calc(34);
        text-align: center;
        pointer-events: none;
    }
}

//@Todo
//need optimization

@mixin form-focus-color($focuscolor: $input-border-focus) {
    input[type] {
        @include form-control-focus($focuscolor);
    }
     input[type].underline {
        @include underline-form-control-focus($focuscolor);
    }
    .form-feedback-icon {
        color: $focuscolor;
    }
}

.form-group.form-correct {
  @include form-focus-color($LightGreen600);
}

.form-group.form-error {
  @include form-focus-color($Red400);
}



/***********Feedback Icon*********/
input.form-control.feedback-correct {
    position: relative;
    background: {
        image: url("/icon/correct.png");
        repeat: no-repeat;
        size: rem-calc(20) rem-calc(20);
        position: 97% 50%;
    }
}

input.form-control.feedback-error {
    position: relative;
    background: {
        image: url("/icon/error.png");
        repeat: no-repeat;
        size: rem-calc(20) rem-calc(20);
        position: 97% 50%;
    }
}
